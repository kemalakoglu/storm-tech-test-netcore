@using Todo.Controllers
@using Todo.Data.Entities
@using Todo.Services
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

<h2>@ViewData["Title"]</h2>

<div id="todoItemContainer" class="col-md-6">

    <ul id="todoItems" class="list-group">

        <li class="list-group-item">
            <div class="container">
                <div class="row">
                    <div id="addNewItemContainer" class="col-md-2">
                        <a asp-action="Create" asp-controller="TodoItem" asp-route-todoListId="@Model.TodoListId">
                            <strong>Add New Item</strong>
                        </a>
                    </div>
                    <div id="todoItemContainer" class="col-md-2">
                        <input class="form-check-input" type="checkbox" value="" id="orderByRank">
                        <label class="form-check-label" for="orderByRank">
                            Order by Rank
                        </label>
                    </div>

                    <div id="hideItemContainer" class="col-md-2">
                        <input class="form-check-input" type="checkbox" value="" id="hideDoneItems">
                        <label class="form-check-label" for="hideDoneItems">
                            Hide Done Items
                        </label>
                    </div>
                </div>
            </div>


        </li>

        @foreach (var item in Model.Items.OrderBy(x => x.Importance))
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }

            <li id="todoItem-@item.TodoItemId" class="list-group-item @contextualClass">

                <div class="row">

                    <div class="col-md-8">
                        <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                            @if (item.IsDone)
                            {
                                <s>@item.Title</s>
                            }
                            else
                            {
                                <text>@item.Title</text>
                            }
                        </a>
                    </div>

                    <div class="col-md-2">
                        <small id="itemRank-@item.TodoItemId">
                            <text>Rank: @item.Rank</text>
                        </small>
                    </div>

                    <div class="col-md-4 text-right">
                        <small>
                            @item.ResponsibleParty.UserName

                            <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30" />

                        </small>
                    </div>
                </div>

            </li>
        }
    </ul>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script type="text/javascript">
    const model = @Json.Serialize(Model.Items.OrderBy(y=>y.Importance));
    const hidingItemsModel = (@Json.Serialize(Model.Items.Where(x=>x.IsDone == true)));
    const orderedItems = (@Json.Serialize(Model.Items)).sort((item1,item2) => item2.rank - item1.rank);

    $(document).ready(function() {
        let ulElem = document.getElementById("todoItems");
        $('#orderByRank').on('change', function() {
         if(this.checked) {
               orderedItems.forEach((item) => ulElem.appendChild(document.getElementById("todoItem-" + item.todoItemId)));
         }
         else{
               model.forEach((item) => ulElem.appendChild(document.getElementById("todoItem-" + item.todoItemId)));
         }
         });

         $('#hideDoneItems').on('change', function() {
         if(this.checked) {
             for(let i = 0; i < hidingItemsModel.length; ++i){
                    let elem = document.getElementById("todoItem-" + hidingItemsModel[i].todoItemId);
                    elem.style.display = 'none';
            }
         }
         else{

      for(let i = 0; i < hidingItemsModel.length; ++i){
                    let elem = document.getElementById("todoItem-" + hidingItemsModel[i].todoItemId);
                    elem.style.display = 'block';
            }
         }
         });
     });

</script>